# udSDK Release Notes

## udSDK 2.3

- New Features
  - Added udCloud Workspace, Project, Scene and File APIs
  - Added udGeoProjection API
- Improvements
  - Improved accuracy in voxeliser
  - Convert now creates folder structure for temporary output directory, cleaning up the created folders at the end
  - Domain logins can now access premium features if server is configured to allow
- Bug Fixes
  - Fixed rare crash in streamer when blocks were destroyed while being loaded
  - Fixed rare crash in streamer when multiple requests to a single block were made
  - Renderer no longer crashes if matrices contain invalid floats
- Emscripten / WASM
  - udSDKjs project moved to public udSDKSamples GitHub repo
- macOS
  - Added M1 support
  - Bumped minimum macOS version to 11.0

### Breaking Changes

- Renamed udProject to udScene
- macOS minimum required version 11.0

## udSDK 2.2

- New Features
  - Added support for Collaboration
  - Added support for logging into udCloud (including context creation and udServerAPI_Query)
  - Added Bake lighting option when converting OBJ files
  - Added option to export images contained in E57 files while converting
  - Added support for login to udCloud
  - Added support for Scenes from udCloud
  - Added a Polygon Filter to the query geometries
  - Added support for UDS Opacity
  - Added support for RAE encoded E57 files
  - Added support for RCP PTS files
  - Added support for in/out SRIDs in udConvert
- Improvements
  - Exposed selective loading of attributes
  - Increased number of attributes supported to 64
  - Exposed a "udQueryGroup" for "udQueryFilter"
- Bug Fixes
  - Fixed issue with xml reader for E57 files

### Breaking Changes

- udContext_Create is now udContext_CreateLegacy
- In udSessionInfo the variable `isOffline ` has been replaced with `apiVersion` where 0 is offline, 1 is udServer and 2 is udCloud server APIs
- udScene_LoadFromServer, udScene_DeleteServerProject and udScene_SetLinkShareStatus need `workspace/project` as pGroupID; this should be null for udServer projects
- udQueryFilter shapes have been merged into udGeometry. Most APIs that used to take the simple shapes can be switched to the udGeometry equivilents easily
- udConvertCustomItem::pReadPointsInt was removed in favour of optimising the pReadPointsFloat path and to provide easier future expansion.

## udSDK 2.1

- New Features
  - Added support for CSG and more advanced geometric shapes
  - Added support to create UDG when converting (using the '.udg' extension)
  - Added attributes to *not* include during conversion
  - Added libraries for Ubuntu 20.04 Focal Fossa
  - Added support for WKT to be used during conversion
  - Added the u16 udRed, udGreen and udBlue channels used in many Geoverse Convert models
  - (Enterprise) Static library options for all supported platforms
- Improvements
  - Exposed "udRCF_ZeroAlphaSkip" render flag to skip rendering of a voxel after it is resolved
  - Exposed `isVisible` for project nodes (which is also synced/saved)
  - Exposed `isPremium` in udContext for premium sessions
  - Exposed a lot more error codes for udError, now matches the full set of udResults from the open-source udCore library
  - Exposed the standard attribute types
  - Exposed information about the attributes that *are* included in the conversion
  - Removed the generic "LiveFeed" project type and added the specific "GTFS" type
  - Exposed `udRCF_2PixelOpt` flag as a significant performance boost when speed is more important than pixel-perfect accuracy
  - Exposed `udRCF_DisableOrthographic` flag as a significant accuracy boost when pixel perfect accuracy is more important than performance
  - Updated udCore for a lot of improvements including significantly more accurate geospatial reprojection between datums
- Bug Fixes
  - Fixed issues with the embedded ASC importer
  - Fixed issue when trying to export or create very small (by point count) point cloud models
  - Fixed issue where the estimated point count took precedence in some cases even though the source resolution was known
  - Fixed issues where AVX was being used even though the CPU doesn't support it
  - Fixed crash with conversion on machines with >34 cores
  - Fixed crash when rendering lots of models or models with significant overlap
  - Fixed an issue with export progress failing when exporting large areas
- Android
  - Fixed CA certs not being detected correctly
- Emscripten / WASM
  - Updated all function names
  - Added functions to use intensity and classification voxel shader and change the server URL
  - Added the ability to create a context based on the domain the application is hosted from
- macOS
  - Framework is now able to be signed
  - Added support for the M1

### Breaking Changes

- The sizes of the following structs changed: udSessionInfo, udConvertInfo, udSceneNode
- The udError enumerator was significantly changed. It now contains far more specific error codes and most of the more generic codes were removes.
- udPointCloud_Export returns a fourth argument, a float pointer that will be updated with the export progress; this can be NULL
- udPNT_LiveFeed was removed (The new udPNT_GTFS covers the GTFS version of Live Feeds all other versions are no longer supported)
- All udScene creation functions require a pointer to a valid udContext object as the first argument now, udScene_CreateInMemory, udScene_CreateInFile, udScene_LoadFromMemory and udScene_LoadFromFile

## udSDK 2.0
- Updated and Rebranded `Vault Development Kit` to version 2.0 of `udSDK`.

> Please Note: Euclideon will continue to port features from udSDK 1.6.5 across which will result in further API changes.

### Breaking Changes (From VDK)
- Everything has been renamed. Mostly this is as simple as anything prefixed with `vdk...` will now be prefixed with `ud...`
  - There are a few exceptions the most notable are;
    - `vdkRenderView` became `udRenderTarget`
    - `vdkQuery` became `udQueryContext`
    - `udRenderOptions` became `udRenderSettings`
    - Many changes in the attributes enums; `vdkAttributeTypeInfo...` to `udATI...` and `vdkStandardAttribute...` to `udStdAttribute...`
- Login now uses email instead of username
- If you need assistance, reach out to support@euclideon.com

### Breaking Changes (From udSDK <= 1.6.5)
Not all features are available in udSDK 2.0 yet; Reach out to your developer contact so we can focus development where it is required to ensure we meet your requirements moving forward.

- There is no direct upgrade path, the entire core renderer and convert pipelines have been upgraded and not all features are available yet.
- Lots of features may not exist or will exist in a different format.

### Specific changes since VDK0.6.0
- Removed built-in watermark support (still available manually)
- Fixed some LAZ and ASC conversion issues reported by users
- Removed server-side license pooling (login to Euclideon Servers is still required)
- Optimised login to require less back and forth with the server
- Added support for server-side projects
- Added user utility functions to Register, Change Password and Forgot Password
- Exposed udStreamer information and added a render flag to disable streamer updates after render (ideally 1 update/frame)
- Added preliminary support for storing primitives (currently limited to triangles) in the UDS file
